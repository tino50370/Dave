name: Deploy AWS Lambda Functions

on:
  push:
    branches:
      - main

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.filter.outputs.functions }}  # Corrected output variable
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check for changes in AWS Lambda functions
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            functions:
              - "AWSLambdaFunctions/**"

  deploy:
    needs: check-changes
    runs-on: ubuntu-latest
    if: ${{ fromJson(needs.check-changes.outputs.matrix) }}  # Corrected condition
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install dependencies
        run: pip install boto3

      - name: Identify changed Lambda functions
        id: changed-functions
        run: |
          CHANGED_DIRS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} AWSLambdaFunctions/ | cut -d '/' -f2 | sort -u)
          echo "Modified functions: $CHANGED_DIRS"
          echo "functions=$(echo $CHANGED_DIRS | jq -R -s -c 'split("\n") | map(select(length > 0))')" >> $GITHUB_ENV

      - name: Deploy modified Lambda functions
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          for FUNCTION in $(echo $functions | jq -r '.[]'); do
            echo "Deploying $FUNCTION..."
            cd AWSLambdaFunctions/$FUNCTION
            zip -r function.zip . > /dev/null
            cd ../../
            python3 deploy_lambda.py "$FUNCTION" "AWSLambdaFunctions/$FUNCTION/function.zip"